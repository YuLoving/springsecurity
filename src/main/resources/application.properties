server.port=9191

#mapper
mybatis.config-location=classpath:mybatis-config.xml
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=cn.nj.springsecurity.POJO

configLocation=classpath:/mybatis-config.xml

#mysql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/clouddb01?useUnicode=true&allowMultiQueries=true&characterEncoding=UTF-8&useSSL=false&autoReconnect=true&failOverReadOnly=false&serverTimezone=GMT%2B8
##spring.datasource.username=root
##spring.datasource.password=root
##spring.datasource.url=jdbc:mysql://47.98.221.129:3306/Test?useUnicode=true&allowMultiQueries=true&characterEncoding=UTF-8&useSSL=false&autoReconnect=true&failOverReadOnly=false&serverTimezone=GMT%2B8
##spring.datasource.username=root
##spring.datasource.password=Aadminroot123$
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&allowMultiQueries=true&characterEncoding=UTF-8&useSSL=false&autoReconnect=true&failOverReadOnly=false&serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=root
# Hikari will use the above plus the following to setup connection pooling
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.pool-name=DatebookHikariCP
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.main.allow-bean-definition-overriding=true

# Redis\u6570\u636E\u6E90
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.timeout=6000
spring.redis.password=foobared
# \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.jedis.pool.max-active=1000
# \u8FDE\u63A5\u6C60\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.jedis.pool.max-wait=-1
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5
spring.redis.jedis.pool.max-idle=10
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5
spring.redis.jedis.pool.min-idle=5

#============================rocketmq  start======================================
# \u751F\u4EA7\u8005\u914D\u7F6E
rocketmq.producer.isOnoff=on
# \u53D1\u9001\u540C\u4E00\u7C7B\u6D88\u606F\u7684\u8BBE\u7F6E\u4E3A\u540C\u4E00\u4E2Agroup\uFF0C\u4FDD\u8BC1\u552F\u4E00
rocketmq.producer.groupName=CicadaGroup
# \u670D\u52A1\u5730\u5740
rocketmq.producer.namesrvAddr=127.0.0.1:9876
# \u6D88\u606F\u6700\u5927\u957F\u5EA6 \u9ED8\u8BA41024*4(4M)
rocketmq.producer.maxMessageSize=4194304
# \u53D1\u9001\u6D88\u606F\u8D85\u65F6\u65F6\u95F4,\u9ED8\u8BA43000
rocketmq.producer.sendMsgTimeout=3000
# \u53D1\u9001\u6D88\u606F\u5931\u8D25\u91CD\u8BD5\u6B21\u6570\uFF0C\u9ED8\u8BA42
rocketmq.producer.retryTimesWhenSendFailed=2

# \u6D88\u8D39\u8005\u914D\u7F6E
rocketmq.consumer.isOnOff=on
rocketmq.consumer.groupName=CicadaGroup
rocketmq.consumer.namesrvAddr=127.0.0.1:9876
# \u63A5\u6536\u8BE5 Topic \u4E0B\u6240\u6709 Tag
rocketmq.consumer.topics=CicadaTopic~*;
rocketmq.consumer.consumeThreadMin=20
rocketmq.consumer.consumeThreadMax=64
# \u8BBE\u7F6E\u4E00\u6B21\u6D88\u8D39\u6D88\u606F\u7684\u6761\u6570\uFF0C\u9ED8\u8BA4\u4E3A1\u6761
rocketmq.consumer.consumeMessageBatchMaxSize=1



# \u914D\u7F6E Group  Topic  Tag
rocket.group=rocketGroup
rocket.topic=rocketTopic
rocket.tag=rocketTag

#============================rocketmq  end======================================


